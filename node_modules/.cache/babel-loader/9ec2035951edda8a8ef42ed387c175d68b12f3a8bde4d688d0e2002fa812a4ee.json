{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedmohamed/Downloads/GOOGLE DRIVE/PROGRAMING/WEB DEV/PROJECTS/YouTube-clone/src/pages/home-page.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport Video from \"../components/video\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetch(\"https://www.googleapis.com/youtube/v3/videos?\" + new URLSearchParams({\n      key: \"AIzaSyAvWZ9W7xA5cmUkjPVZxIC1tbLWgh9abiY\",\n      part: 'snippet',\n      chart: 'mostPopular',\n      maxResults: 50,\n      regionCode: 'SA'\n    })).then(res => {\n      return res.json();\n    }).then(data => {\n      setVideos(data.items);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(\"https://www.googleapis.com/youtube/v3/channels?\" + new URLSearchParams({\n      key: \"AIzaSyAvWZ9W7xA5cmUkjPVZxIC1tbLWgh9abiY\",\n      part: 'snippet',\n      id: videos.map(() => {\n        videos[0].snippet.channelId;\n      })\n    })).then(res => res.json()).then(data => {\n      video_data.channelThumbnail = data.items[0].snippet.thumbnails.default.url;\n      makeVideoCard(video_data);\n    });\n  }, []);\n  console.log(videos[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(Video, {\n      videoImage: video.snippet.thumbnails.high.url,\n      videoTitle: video.snippet.title\n      // videoTime={}\n      // videoDate={}\n      // videoViews={}\n      // channelImage={}\n      ,\n      channelName: video.snippet.channelTitle\n    }, video.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"NlcbafLBEx37RaHXFOH4KiliPPw=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Video","jsxDEV","_jsxDEV","HomePage","_s","videos","setVideos","fetch","URLSearchParams","key","part","chart","maxResults","regionCode","then","res","json","data","items","id","map","snippet","channelId","video_data","channelThumbnail","thumbnails","default","url","makeVideoCard","console","log","className","children","video","videoImage","high","videoTitle","title","channelName","channelTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ahmedmohamed/Downloads/GOOGLE DRIVE/PROGRAMING/WEB DEV/PROJECTS/YouTube-clone/src/pages/home-page.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from 'react';\n\nimport Video from \"../components/video\";\n\nexport default function HomePage() {\n    const [videos, setVideos] = useState([]);\n    useEffect(() => {\n        fetch(\"https://www.googleapis.com/youtube/v3/videos?\" + new URLSearchParams({\n            key: \"AIzaSyAvWZ9W7xA5cmUkjPVZxIC1tbLWgh9abiY\",\n            part: 'snippet',\n            chart: 'mostPopular',\n            maxResults: 50,\n            regionCode: 'SA'\n        }))\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            setVideos(data.items);\n        });\n    }, []);\n\n    useEffect(() => {\n        fetch(\"https://www.googleapis.com/youtube/v3/channels?\" + new URLSearchParams({\n            key: \"AIzaSyAvWZ9W7xA5cmUkjPVZxIC1tbLWgh9abiY\",\n            part: 'snippet',\n            id: videos.map(() => {videos[0].snippet.channelId})\n        }))\n        .then(res => res.json())\n        .then(data => {\n            video_data.channelThumbnail = data.items[0].snippet.thumbnails.default.url;\n            makeVideoCard(video_data);\n        })\n    }, []);\n\n    console.log(videos[0])\n\n    return (\n        <div className=\"home-page\">\n            {videos.map((video) => (\n                <Video \n                    key={video.id}\n                    videoImage={video.snippet.thumbnails.high.url}\n                    videoTitle={video.snippet.title}\n                    // videoTime={}\n                    // videoDate={}\n                    // videoViews={}\n                    // channelImage={}\n                    channelName={video.snippet.channelTitle}\n                 />\n            ))}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,+CAA+C,GAAG,IAAIC,eAAe,CAAC;MACxEC,GAAG,EAAE,yCAAyC;MAC9CC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,aAAa;MACpBC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE;IAChB,CAAC,CAAC,CAAC,CACFC,IAAI,CAAEC,GAAG,IAAK;MACX,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACZX,SAAS,CAACW,IAAI,CAACC,KAAK,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,iDAAiD,GAAG,IAAIC,eAAe,CAAC;MAC1EC,GAAG,EAAE,yCAAyC;MAC9CC,IAAI,EAAE,SAAS;MACfS,EAAE,EAAEd,MAAM,CAACe,GAAG,CAAC,MAAM;QAACf,MAAM,CAAC,CAAC,CAAC,CAACgB,OAAO,CAACC,SAAS;MAAA,CAAC;IACtD,CAAC,CAAC,CAAC,CACFR,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVM,UAAU,CAACC,gBAAgB,GAAGP,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACG,OAAO,CAACI,UAAU,CAACC,OAAO,CAACC,GAAG;MAC1EC,aAAa,CAACL,UAAU,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENM,OAAO,CAACC,GAAG,CAACzB,MAAM,CAAC,CAAC,CAAC,CAAC;EAEtB,oBACIH,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrB3B,MAAM,CAACe,GAAG,CAAEa,KAAK,iBACd/B,OAAA,CAACF,KAAK;MAEFkC,UAAU,EAAED,KAAK,CAACZ,OAAO,CAACI,UAAU,CAACU,IAAI,CAACR,GAAI;MAC9CS,UAAU,EAAEH,KAAK,CAACZ,OAAO,CAACgB;MAC1B;MACA;MACA;MACA;MAAA;MACAC,WAAW,EAAEL,KAAK,CAACZ,OAAO,CAACkB;IAAa,GAPnCN,KAAK,CAACd,EAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQf,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACvC,EAAA,CAjDuBD,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}