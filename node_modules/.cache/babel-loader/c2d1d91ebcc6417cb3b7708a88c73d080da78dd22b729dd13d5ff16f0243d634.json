{"ast":null,"code":"var _jsxFileName = \"/Users/ahmedmohamed/Downloads/GOOGLE DRIVE/PROGRAMING/WEB DEV/PROJECTS/YouTube-clone/src/sections/VideosSection.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Video from \"../components/video\";\nimport dataAPI from \"../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function VideosSection() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dataAPI.map(data => /*#__PURE__*/_jsxDEV(Video, {\n      videoThumbnail: data.video.thumbnail,\n      videoTitle: data.video.title,\n      videoTime: data.video.time,\n      videoDate: data.video.dateApproximated,\n      videoViews: data.video.viewsApproximated,\n      channelImage: data.video.channel.logo,\n      channelName: data.video.channel.name,\n      channelVerified: data.video.channel.verified\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_c = VideosSection;\nvar _c;\n$RefreshReg$(_c, \"VideosSection\");","map":{"version":3,"names":["React","Link","Video","dataAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","VideosSection","children","map","data","videoThumbnail","video","thumbnail","videoTitle","title","videoTime","time","videoDate","dateApproximated","videoViews","viewsApproximated","channelImage","channel","logo","channelName","name","channelVerified","verified","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ahmedmohamed/Downloads/GOOGLE DRIVE/PROGRAMING/WEB DEV/PROJECTS/YouTube-clone/src/sections/VideosSection.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Video from \"../components/video\";\nimport dataAPI from \"../data\";\n\nexport default function VideosSection() {\n    return (\n        <>\n            {dataAPI.map((data) => (\n                <Video \n                    key={data.id}\n                    videoThumbnail={data.video.thumbnail}\n                    videoTitle={data.video.title}\n                    videoTime={data.video.time}\n                    videoDate={data.video.dateApproximated}\n                    videoViews={data.video.viewsApproximated}\n                    channelImage={data.video.channel.logo}\n                    channelName={data.video.channel.name}\n                    channelVerified={data.video.channel.verified}\n                />\n            ))} \n        </>\n        \n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,OAAO,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,aAAaA,CAAA,EAAG;EACpC,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,EACKN,OAAO,CAACO,GAAG,CAAEC,IAAI,iBACdN,OAAA,CAACH,KAAK;MAEFU,cAAc,EAAED,IAAI,CAACE,KAAK,CAACC,SAAU;MACrCC,UAAU,EAAEJ,IAAI,CAACE,KAAK,CAACG,KAAM;MAC7BC,SAAS,EAAEN,IAAI,CAACE,KAAK,CAACK,IAAK;MAC3BC,SAAS,EAAER,IAAI,CAACE,KAAK,CAACO,gBAAiB;MACvCC,UAAU,EAAEV,IAAI,CAACE,KAAK,CAACS,iBAAkB;MACzCC,YAAY,EAAEZ,IAAI,CAACE,KAAK,CAACW,OAAO,CAACC,IAAK;MACtCC,WAAW,EAAEf,IAAI,CAACE,KAAK,CAACW,OAAO,CAACG,IAAK;MACrCC,eAAe,EAAEjB,IAAI,CAACE,KAAK,CAACW,OAAO,CAACK;IAAS,GARxClB,IAAI,CAACmB,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASf,CACJ;EAAC,gBACJ,CAAC;AAGX;AAACC,EAAA,GAnBuB3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}